import contextlib
import io
import sys

class Member:
    def __init__(self, member_id, name, email):
        self.member_id = member_id
        self.name = name
        self.email = email

    def __str__(self):
        return f"ID: {self.member_id}, Name: {self.name}, Email: {self.email}"


class Event:
    def __init__(self, event_id, event_name, event_date, event_time, event_description):
        self.event_id = event_id
        self.event_name = event_name
        self.event_date = event_date
        self.event_time = event_time
        self.event_description = event_description

    def __str__(self):
        return f"Event ID: {self.event_id}, Event Name: {self.event_name}, Date: {self.event_date}, Time: {self.event_time}, Description: {self.event_description}"


class Club:
    def __init__(self, club_id, club_name):
        self.club_id = club_id
        self.club_name = club_name
        self.members = []
        self.events = []

    def add_member(self, member):
        self.members.append(member)

    def remove_member(self, member_id):
        self.members = [member for member in self.members if member.member_id != member_id]

    def add_event(self, event):
        self.events.append(event)

    def remove_event(self, event_id):
        self.events = [event for event in self.events if event.event_id != event_id]

    def __str__(self):
        return f"Club ID: {self.club_id}, Club Name: {self.club_name}, Members: {len(self.members)}, Events: {len(self.events)}"


class ClubManagementSystem:
    def __init__(self):
        self.clubs = {}

    def create_club(self, club_id, club_name):
        if club_id not in self.clubs:
            self.clubs[club_id] = Club(club_id, club_name)
            print(f"Club '{club_name}' created successfully.")
        else:
            print(f"Club with ID {club_id} already exists.")

    def delete_club(self, club_id):
        if club_id in self.clubs:
            del self.clubs[club_id]
            print(f"Club with ID {club_id} deleted successfully.")
        else:
            print(f"Club with ID {club_id} does not exist.")

    def add_member_to_club(self, club_id, member_id, name, email):
        if club_id in self.clubs:
            member = Member(member_id, name, email)
            self.clubs[club_id].add_member(member)
            print(f"Member {name} added to club {self.clubs[club_id].club_name}.")
        else:
            print(f"Club with ID {club_id} does not exist.")

    def remove_member_from_club(self, club_id, member_id):
        if club_id in self.clubs:
            self.clubs[club_id].remove_member(member_id)
            print(f"Member with ID {member_id} removed from club {self.clubs[club_id].club_name}.")
        else:
            print(f"Club with ID {club_id} does not exist.")

    def add_event_to_club(self, club_id, event_id, event_name, event_date, event_time, event_description):
        if club_id in self.clubs:
            event = Event(event_id, event_name, event_date, event_time, event_description)
            self.clubs[club_id].add_event(event)
            print(f"Event {event_name} added to club {self.clubs[club_id].club_name}.")
        else:
            print(f"Club with ID {club_id} does not exist.")

    def remove_event_from_club(self, club_id, event_id):
        if club_id in self.clubs:
            self.clubs[club_id].remove_event(event_id)
            print(f"Event with ID {event_id} removed from club {self.clubs[club_id].club_name}.")
        else:
            print(f"Club with ID {club_id} does not exist.")

    def display_clubs(self):
        print("\nDashboard:")
        print("Club Name".ljust(30) + "Number of Members".ljust(15) + "Number of Events")
        print("-" * 60)
        for club in self.clubs.values():
            print(club.club_name.ljust(30) + str(len(club.members)).ljust(15) + str(len(club.events)))

    def display_club_details(self):
        print("\nClub Details:")
        for club in self.clubs.values():
            print(f"\nClub Name: {club.club_name}")
            print(f"Club ID: {club.club_id}")
            print(f"Number of Members: {len(club.members)}")
            print("Members:")
            for member in club.members:
                print(f"- {member}")
            print(f"Number of Events: {len(club.events)}")
            print("Events:")
            for event in club.events:
                print(f"- {event}")

    def update_club_name(self, club_id, new_name):
        if club_id in self.clubs:
            self.clubs[club_id].club_name = new_name
            print(f"Club name updated to {new_name}.")
        else:
            print(f"Club with ID {club_id} does not exist.")



if __name__ == "__main__":
    print("Welcome to the University Club Management System!")
    
    system = ClubManagementSystem()

    # Initialize clubs and members silently
    with contextlib.redirect_stdout(io.StringIO()):
        system.create_club("C1", "Science Club")
        system.add_member_to_club("C1", "M1", "Sandhya@gmail.com")
        system.add_member_to_club("C1", "M2", "bhagya@gmail.com")
        system.add_event_to_club("C1", "E1", "Science Fair", "2024-04-01", "10:00 AM", "Annual Science Fair")

        system.create_club("C2", "Literary Club")
        system.add_member_to_club("C2", "M3", "sinchana@gmail.com")
        system.add_member_to_club("C2",04", "Bob Johnson", "bob@example.com")
        system.add_member_to_club("C002", "M005", "Eve Brown", "eve@example.com")
        system.add_event_to_club("C002", "E002", "Book Reading", "2024-04-15", "2:00 PM", "Monthly Book Reading Session")

        system.create_club("C003", "Sports Club")
        system.add_member_to_club("C003", "M006", "Mike Davis", "mike@example.com")
        system.add_event_to_club("C003", "E003", "Soccer Match", "2024-04-20", "4:00 PM", "Inter-Club Soccer Match")

        system.create_club("C004", "Music Club")
        system.add_member_to_club("C004", "M007", "Emily Taylor", "emily@example.com")
        system.add_member_to_club("C004", "M008", "David Lee", "david@example.com")
        system.add_event_to_club("C004", "E004", "Concert Night", "2024-04-25", "7:00 PM", "Annual Music Concert")

        system.create_club("C005", "Art Club")
        system.add_member_to_club("C005", "M009", "Sophia Patel", "sophia@example.com")
        system.add_member_to_club("C005", "M010", "Oliver Kim", "oliver@example.com")
        system.add_member_to_club("C005", "M011", "Isabella Martin", "isabella@example.com")
        system.add_event_to_club("C005", "E005", "Art Exhibition", "2024-04-30", "5:00 PM", "Annual Art Exhibition")

        system.create_club("C006", "Drama Club")
        system.add_member_to_club("C006", "M012", "Mia Garcia", "mia@example.com")
        system.add_member_to_club("C006", "M013", "Noah Hall", "noah@example.com")
        system.add_event_to_club("C006", "E006", "Play Performance", "2024-05-01", "8:00 PM", "Annual Play Performance")

    while True:
        system.display_clubs()
        print("\nUniversity Club Management System")
        print("1. Create Club")
        print("2. Delete Club")
        print("3. Add Member to Club")
        print("4. Remove Member from Club")
        print("5. Add Event to Club")
        print("6. Remove Event from Club")
        print("7. Display Club Details")
        print("8. Update Club Name")
        print("9. Exit")

        choice = input("Enter your choice: ")

        if choice == "1":
            club_id = input("Enter club ID: ")
            club_name = input("Enter club name: ")
            system.create_club(club_id, club_name)
        elif choice == "2":
            club_id = input("Enter club ID to delete: ")
            system.delete_club(club_id)
        elif choice == "3":
            club_id = input("Enter club ID: ")
            member_id = input("Enter member ID: ")
            name = input("Enter member name: ")
            email = input("Enter member email: ")
            system.add_member_to_club(club_id, member_id, name, email)
        elif choice == "4":
            club_id = input("Enter club ID: ")
            member_id = input("Enter member ID to remove: ")
            system.remove_member_from_club(club_id, member_id)
        elif choice == "5":
            club_id = input("Enter club ID: ")
            event_id = input("Enter event ID: ")
            event_name = input("Enter event name: ")
            event_date = input("Enter event date (YYYY-MM-DD): ")
            event_time = input("Enter event time: ")
            event_description = input("Enter event description: ")
            system.add_event_to_club(club_id, event_id, event_name, event_date, event_time, event_description)
        elif choice == "6":
            club_id = input("Enter club ID: ")
            event_id = input("Enter event ID to remove: ")
            system.remove_event_from_club(club_id, event_id)
        elif choice == "7":
            system.display_club_details()
        elif choice == "8":
            club_id = input("Enter club ID: ")
            new_name = input("Enter new club name: ")
            system.update_club_name(club_id, new_name)
        elif choice == "9":
            print("Thank you for using the University Club Management System!")
            break
        else:
            print("Invalid choice. Please choose again.")
